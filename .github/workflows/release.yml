name: Release Automation

on:
  push:
    branches:
      - main

permissions:
  contents: write
  id-token: write

jobs:
  create-release:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          sudo apt update && sudo apt install -y patchelf zip
          python3 -m pip install --upgrade pip
          pip install nuitka==2.6.7 python-telegram-bot requests


      - name: Extract version number
        id: extract_version
        run: |
          VERSION=$(grep VERSION_DLOADBOX bin/dloadbox-installer.sh | head -n 1 | awk -F '"' '{print $2}')
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Find Telegram package path
        id: find_telegram_path
        run: |
          TELEGRAM_PATH=$(python3 -c "import telegram; print(telegram.__path__[0])")
          echo "TELEGRAM_PATH=$TELEGRAM_PATH" >> $GITHUB_ENV
          echo "Found Telegram package at: $TELEGRAM_PATH"

      - name: Build binary with Nuitka
        run: |
          mkdir -p build_output
          nuitka --standalone --onefile \
            --include-package=requests \
            --include-package=logging \
            --include-package=os \
            --include-package=telegram \
            --include-data-dir=$TELEGRAM_PATH=telegram \
            --output-dir=build_output source/dloadbox-telegrambot.py
          mv build_output/dloadbox-telegrambot.bin bin/dloadbox-telegrambot
          rm -rf build_output

      - name: Create release notes
        id: generate_notes
        run: |
          echo "# Version: $VERSION" > release_notes.md
          echo "## Installation" >> release_notes.md
          echo "\`\`\`bash" >> release_notes.md
          echo "wget https://github.com/${{ github.repository }}/releases/download/$VERSION/dloadbox-installer.sh" >> release_notes.md
          echo "chmod +x dloadbox-installer.sh" >> release_notes.md
          echo "./dloadbox-installer.sh" >> release_notes.md
          echo "\`\`\`" >> release_notes.md

      - name: Create dloadbox.zip
        run: |
          zip -r dloadbox.zip . -x ".git/*" ".github/*" "release_notes.md" "images/*"

      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          name: ${{ env.VERSION }}
          tag_name: ${{ env.VERSION }}
          body_path: ./release_notes.md
          files: |
            bin/dloadbox-installer.sh
            dloadbox.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
